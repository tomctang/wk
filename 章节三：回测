第三章：回测（Backtesting）
1. 为什么要做回测？
回测就是用历史数据模拟你的交易策略，看看它以前能不能赚钱。

想象一下，你有一个炒股秘籍，但你不知道它是真的有用，还是只是个玄学。你可以拿过去几年的股市数据，把你的交易策略跑一遍，看看如果你早几年用这个策略，会不会赚到钱。
这就叫回测。

回测不仅能帮你验证策略是否有效，还能：
确保你理解策略，不会不小心搞错。
优化策略，看看稍微调整一下会不会赚更多。
发现问题，比如数据错误、交易成本、心理误判等。

2. 该用什么工具做回测？
  1. 免费 & 开源回测平台
(1) Backtrader
✅ 优点：

开源免费，适用于个人和小型团队。
支持多市场（股票、期货、外汇、加密货币）。
可以直接接入实盘交易（IB、Binance、Alpaca等）。
内置可视化分析（回测结果、资金曲线、交易信号）。
❌ 缺点：

需要Python 编程能力，不适合零编程基础用户。
文档和社区支持不如商业软件强。
📌 **适合：**个人投资者、小型量化团队，希望用 Python 进行回测和实盘交易的用户。

(2) Zipline
✅ 优点：

由 Quantopian 团队开发，曾用于顶级量化竞赛。
免费开源，支持 Python。
内置数据处理、财报数据整合（Quandl API）。
历史模拟与实盘交易集成（Alpaca API）。
❌ 缺点：

开发已停止维护（社区仍有部分支持）。
不支持高频交易，只适合日线级别回测。
依赖 Pandas 计算，回测速度较慢。
📌 适合：想研究因子选股、日线级别交易的个人交易者。

(3) QuantConnect
✅ 优点：

免费提供云端回测，支持C#、Python、F# 语言。
可回测股票、期货、外汇、加密货币等。
提供超大规模历史数据（比 Zipline/Backtrader 更完善）。
可连接 IB、Binance 进行实盘交易。
❌ 缺点：

本地回测体验不佳，主要依赖云端计算。
高级功能需要付费，例如更长时间的数据访问权限。
📌 **适合：**希望使用云计算资源，并且喜欢 Python 或 C# 进行量化交易的用户。

(4) FastQuant
✅ 优点：

基于 Backtrader，但封装得更简单，适合新手。
只需几行 Python 代码 就能运行回测。
适用于股票、外汇等市场，支持多种技术指标（MACD、均线等）。
❌ 缺点：

功能不如 Backtrader 强大，灵活性较低。
不支持实时交易。
📌 **适合：**想要快速上手回测但不想写太多代码的 Python 用户。

2. 商业 & 付费回测平台
(5) TradeStation
✅ 优点：

一体化交易平台，集成了回测、交易执行、自动化策略运行。
内置海量历史数据，无需额外下载。
适合技术分析策略（均线、KDJ、MACD、布林带等）。
支持EasyLanguage 编程（比 Python 简单）。
❌ 缺点：

只能在 TradeStation 自家平台交易，策略不通用。
回测能力一般，不适合高频交易。
需要订阅，费用较高（$99/月起）。
📌 **适合：**传统交易者，希望边回测边直接执行策略的用户。

(6) MetaTrader 4/5（MT4/MT5）
✅ 优点：

适用于外汇、期货、加密货币交易。
内置策略回测系统（支持 MQL4/MQL5 编程）。
支持实盘交易，可以自动执行策略。
❌ 缺点：

不适用于股票交易。
回测工具较简单，无法处理复杂数据分析。
📌 适合：做外汇、期货交易的用户，希望在一个平台完成回测+实盘交易。

(7) MATLAB
✅ 优点：

功能强大，适合复杂数学模型、统计分析、机器学习等策略。
计算速度快，支持大规模数据回测（比 Excel 快）。
提供专用金融工具箱（Financial Toolbox）。
❌ 缺点：

价格昂贵（许可证费用 $1,000+）。
不支持直接交易，只能用来做回测。
📌 **适合：**数据科学家、量化研究员，希望构建复杂数学模型的用户。

(8) Bloomberg Terminal
✅ 优点：

提供全市场数据（股票、债券、期货、外汇、加密等）。
支持回测、因子分析、风险管理。
适用于专业机构、基金经理。
❌ 缺点：

费用极高（$25,000+/年）。
需要专业培训，不适合个人交易者。
📌 **适合：**专业投资机构、对冲基金经理。

1. 从哪里获取历史数据？
获取历史数据的方法有很多，免费 & 付费数据源各有优缺点：

（1）免费数据源
✅ **优点：**完全免费，适合新手学习和测试策略。
❌ 缺点：通常数据质量一般，可能有幸存者偏差、数据缺失等问题。

数据来源	适用市场	数据类型	优点	缺点
Yahoo Finance	股票、ETF	日线数据	免费，简单易用	不能下载高频数据，可能有幸存者偏差
Alpha Vantage	股票、外汇、加密	日线、分钟级数据	免费 API 提供多种数据	免费额度有限，速度较慢
Binance API	加密货币	分钟级数据	免费提供全市场数据	只能用于加密货币交易
Quandl（部分免费）	股票、经济数据	日线数据	提供部分免费的宏观经济数据	高级数据需要付费
Oanda	外汇	分钟级数据	免费的外汇数据	只能用于外汇市场

  （2）付费数据源
✅ 优点：数据完整、质量高、包含详细的市场信息（如订单簿、L2 数据）。
❌ 缺点：价格昂贵，一般适用于专业机构或资金较多的量化交易员。

数据来源	适用市场	数据类型	价格	优点	缺点
Bloomberg Terminal	全市场	高频、L2 数据	$25,000+/年	全市场数据，质量高	太贵了，个人投资者用不起
Reuters Eikon	股票、期货、外汇	高频、新闻数据	$20,000+/年	专业机构使用	价格昂贵
TickData	股票、期货	Tick 级数据	按年收费，$1000+	高频数据质量高	价格较贵
Polygon.io	股票、加密、外汇	Tick 级	月费 $49+	数据完整，支持 L2 订单流	需要付费
Intrinio	股票	财报 + 价格数据	订阅制，$99+	提供财务因子数据	价格偏贵

2.获取数据的途径有哪些？
  1. API 接口
定义与原理：
API（Application Programming Interface，应用程序接口）允许程序通过编程方式与数据提供商的服务器进行交互，直接请求并获取所需的历史数据、实时数据或其他信息。
  2. 数据平台直接下载
定义与原理：
很多数据平台（不论是免费还是付费）提供直接下载数据的功能。用户可以通过平台的网站界面，选择所需的时间区间和数据类型，然后下载为 CSV、Excel、JSON 等格式的文件。
  3. 网络爬虫抓取
定义与原理：
当目标数据没有公开的 API 或数据平台提供时，可以使用网络爬虫技术，通过程序模拟浏览器行为，从网页上提取需要的数据。分别举例有哪些平台

4.不同数据源的常见问题
  1.拆股 & 分红调整 → 否则股价会“假暴跌”。
  2.幸存者偏差 → 退市的股票可能会影响策略真实表现。
  3.高低点是否可靠 → 避免因假突破/假回撤导致错误交易


5.怎么评估回测结果
  夏普比率（Sharpe Ratio） 和 最大回撤（Maximum Drawdown, MDD） 是两个最常用的指标。它们的作用分别是：
    夏普比率：衡量赚钱的稳定性，告诉你单位风险能赚多少钱。
    最大回撤：衡量亏损的最大风险，告诉你历史上最惨的时候亏了多少。
    
###详细解释
1.夏普比率
  风险的度量——标准差
在投资中，风险通常用收益率的波动性来表示，波动性越大，风险也就越高。标准差是衡量这种波动性的一种常用统计指标。比如，如果一个投资组合的年化收益率波动为10%，这10%就代表了你在一年内可能遇到的正负波动幅度。
  超额收益
超额收益指的是投资收益减去无风险收益（比如国债收益率）的部分。它反映了你因承担风险而获得的额外收益。
  单位风险能赚多少钱
将超额收益除以风险（标准差），就得到了每承担一单位风险所获得的超额收益。换句话说，如果一个投资组合的夏普比率为1.5，就意味着每承担1单位的风险（标准差），你可以获得1.5单位的超额收益。这个比例越高，说明在每单位风险上获得的回报越多，投资表现越优秀，赚钱的稳定性也越高。

举个简单的例子
假设有两个投资组合：

组合A：超额收益为6%，标准差为5%，则夏普比率为 
6%/5%=1.2。
组合B：超额收益为8%，标准差为8%，则夏普比率为 
8%/8%=1.0
虽然组合B的超额收益更高，但它的风险也更大。夏普比率告诉我们组合A每承担1单位风险能赚1.2单位的超额收益，而组合B每承担1单位风险仅赚1.0单位的超额收益。因此，从风险调整后的角度看，组合A的表现更好。

2.最大回撤
    最大回撤（Maximum Drawdown, MDD）可以用最简单的话来理解：它表示在一段时间内，你的投资或账户价值从最高点到最低点的最大下降幅度，也就是“最糟糕情况下损失了多少钱”。

回测中常见的问题
1. 前视偏差（Look-Ahead Bias）——“未来数据作弊”
❌ 错误示例：

你的策略用当天最低价来决定买入，但问题是你在当天交易时根本不知道最低价。
这相当于用未来数据作弊，让回测收益看起来比实际更好。
✅ 解决方案：

只使用当时可见的数据，比如前一天的收盘价，而不是当天的最低价。
2. 幸存者偏差（Survivorship Bias）——“只看赢家，忽略破产公司”
❌ 错误示例：

你在回测 2010-2020 年的股票表现，但只选了2024 年还存在的公司，忽略了已破产或退市的公司。
这让回测看起来很赚钱，但实际上过去的市场里有很多亏损股被筛掉了。
✅ 解决方案：

选择包含退市公司的数据库，比如 CRSP 或 Bloomberg。
自己每天存数据，记录所有股票，包括后来破产的。
3. 数据挖掘偏差（Data-Snooping Bias）——“瞎调参数，优化到历史最优”
❌ 错误示例：

你测试了1000 种均线组合，最终发现9 日均线 + 30 日均线最赚钱。
但这可能只是历史上的巧合，在未来可能根本没用。
✅ 解决方案：

分训练集和测试集，先在 2010-2015 年优化参数，再用 2016-2020 年测试，看看是否依然有效。
选择有逻辑支持的参数，而不是纯粹靠调参优化。
4. 忽略交易成本（Trading Costs）——“只看理论收益，不考虑交易成本”
❌ 错误示例：

你的策略每天交易 100 次，回测显示年化收益 500%。
但你没有考虑交易手续费、滑点和市场冲击，实际执行后，交易成本可能比利润还高。
✅ 解决方案：

在回测中加入真实交易成本：
python

commission = 0.0005  # 交易费用 0.05%
slippage = 0.0002  # 滑点 0.02%
transaction_cost = commission + slippage
测试策略是否仍然能盈利。


7.列举交易模式
      
策略	适用市场	适用周期	核心逻辑
均值回归策略	股票、外汇、期货	日线/周线	价格偏离均值后回归
配对交易	股票、ETF	日线/周线	相关资产价格偏离均值后回归
短期反转	股票	日内/1-5天	超跌反弹
动量交易	股票、期货	1个月-6个月	强者恒强，涨的更涨
日内突破	美股、A股	1分钟-1小时	突破关键价格后顺势交易
均线交叉	股票、外汇	日线/周线	金叉买入，死叉卖出
波动率突破	期货、外汇	日线/小时线	波动率放大后进入趋势
